#include <stdio.h>
#include <windows.h>
#include <stdlib.h>

int joueurpartie() {
    int a;
    do {

        printf("\nPour commencer cette nouvelle partie, voici les modes de jeu disponible :\n- 2 joueurs\n- 4 joueurs\nVeuillez choisir le mode (2 ou 4):\n");
        scanf("%d",&a);
    } while(a !=2 && a !=4);
    return a;
}

int joueurhumain (int a) {
    int b;
    do {
        printf("Combien de joueur humain etes vous a jouer (de 1 a %d)?:\n",a);
        scanf("%d",&b);
    }
    while (b<1 || b>a);
}

int jetonjoueur(char jeton[],int b, int i,char nom[]) {
    char jetonstandard[4][20] ={"@","$","#","%"};
    int choix;
    char jetonia[3][20]={"J","K","L"};
    if(i<=b){
           printf("%s, parmi ces jetons:\n",nom);
           for(int j=0;j<4;j++) {
               printf("%d - %s\n",j+1,jetonstandard[j]);
           }
           printf("Lequel choisis tu ? :");
           scanf("%d",&choix);
            strcpy(jeton,jetonstandard[choix-1]);
       }

    else {

        strcpy(jeton,jetonia[i-b-1]);
    }
    return 0;
}

int menu () {
    int a;
    do {
        printf("\n======] Quoridor [=======\n");
        printf("\nVous voici dans le menu du Quoridor :\n");
        printf("1 - Lancer une nouvelle partie\n");
        printf("2 - Reprendre une partie sauvegardé\n");
        printf("3 - Afficher de l'aide\n");
        printf("4 - Afficher le score des joueurs\n");
        printf("5 - Quitter le jeu\n");
        printf("Veuillez choisir (1 a 5):");
        scanf("%d", &a);
    }
    while ( a<1 || a >5);
    return a;
}

int nomjoueur(char nom[],int b, int i) {
        char nomia[3][20]={"ia1","ia2","ia3"};
            if(i<=b){
            printf("Joueur %d, il est temps d'ecrire votre nom:\n",i);
            scanf("%s",nom);

        }
        else {

            strcpy(nom,nomia[i-b-1]);
        }
    return 0;
}

int affichageplateau (char plateau[18][18],int couleurcases,char ordrejeton[][30], int x, int t, char ordrejoueur[][30], int Nbrjoueurs, int stockbarriere[][30]){
    for(int i=0;i<18;i++) {
    for(int j=0;j<18;j++){

        if(plateau[i][j]==1) {
            Color(7,7);
            printf(" %d ",plateau[i][j]);
        }
        else if(plateau[i][j]=='X') {
            Color(0,0);
            printf(" %c ",plateau[i][j]);
        }

        else if(plateau[i][j]==0) {
            Color(couleurcases,couleurcases);
            printf(" %c ",plateau[i][j]);
        }

        else if (plateau[i][j]==ordrejeton[2][0]) {
            Color(0,couleurcases);
            printf(" %c ",plateau[i][j]);

        }
        else if (plateau[i][j]==ordrejeton[0][0] || plateau[i][j]==ordrejeton[1][0]) {
            Color(0,couleurcases);
            printf(" %c ",plateau[i][j]);

        }

        else if (plateau[i][j]==ordrejeton[3][0]) {
            Color(0,couleurcases);
            printf(" %c ",plateau[i][j]);

        }
        else {
            Color(15,0);
            printf(" %c ",plateau[i][j]);
        }
    } if (x==2){
        switch(i) {
            case 1: Color(15,0);
            printf("       Nombre de joueurs : %d",Nbrjoueurs);break;
            case 3:Color(15,0);
            printf("       Joueur : %s",ordrejoueur[t]);break;
            case 5:Color(15,0);
            printf("       Score partie :");break;
            case 7 :Color(15,0);
            printf("       jeton : %s",ordrejeton[t]);break;
            case 9:Color(15,0);
            printf("       Mur restant : %d ",stockbarriere[t][30]);break;
            default: break;
        }
        }
    printf("\n");
}
}

int couleurplateau(char plateau[18][18],int couleurcases) {
    int cases,choix,choix2;
    Color(15,0);
    do {
        printf("Souhaitez-vous changer les couleurs des cases ?\n1 - OUI\n2 - NON\nA vous de choisir: ");
        scanf("%d",&cases);
    }
    while(cases!=1 && cases!=2);

    if(cases==1) {
        do {
            do {
                printf("Veuillez choisir parmi ces couleurs :\n1 - Blanc\n2 - Jaune \n3 - Turquoise\n4 - Noir\n5 - Rouge:");
                scanf("%d",&choix);
            }
            while (choix<1 || choix>5);
            switch (choix) {
                case 1: couleurcases=15;
                break;
                case 2: couleurcases=14;
                break;
                case 3: couleurcases=1;
                break;
                case 4: couleurcases=0;
                break;
                default : couleurcases=4;
            }
            for(int i=0;i<18;i++) {
                for(int j=0;j<18;j++){

                    if(plateau[i][j]==1) {
                        Color(7,7);
                        printf(" %d ",plateau[i][j]);
                    }
                    else if(plateau[i][j]==2) {
                        Color(0,0);
                        printf(" %d ",plateau[i][j]);

                    }
                    else if (plateau[i][j]==0){
                        Color(couleurcases,couleurcases);
                        printf(" %c ",plateau[i][j]);
                    }
                    else {
                        Color(15,0);
                        printf(" %c ",plateau[i][j]);
                    }

                }
                printf("\n");
            }
            do {
                Color(15,0);
                printf("Est-ce votre choix definitif ? :\n1 - OUI\n2 - NON");
                scanf("%d",&choix2);
            }
            while (choix2<1 || choix2>2);
        }
        while(choix2!=1);
    }
return couleurcases;
    }

int hasard(int Nbrjoueur, char nom[][30],char ordrejoueur[Nbrjoueur][30],char jeton[][30],char ordrejeton[Nbrjoueur][30]) {

    int ordre[Nbrjoueur];
    srand(time(NULL));
    ordre[0] = rand()%Nbrjoueur;
    for (int i = 1; i < Nbrjoueur; i++){
        do {
            ordre[i] = rand()%Nbrjoueur;
        }
        while (ordre[i] == ordre[i-1] || ordre[i] == ordre[i-2] || ordre[i] == ordre[0]);
    }
    for (int i = 0; i < Nbrjoueur; i++) {
        if (ordre[i]==0) {
            strcpy(ordrejoueur[i],nom[0]);
            strcpy(ordrejeton[i],jeton[0]);
        }
        else if (ordre[i]==1) {
            strcpy(ordrejoueur[i],nom[1]);
            strcpy(ordrejeton[i],jeton[1]);
        }
        else if (ordre[i]==2) {
            strcpy(ordrejoueur[i],nom[2]);
            strcpy(ordrejeton[i],jeton[2]);
                    }
        else if (ordre[i]==3) {
            strcpy(ordrejoueur[i],nom[3]);
            strcpy(ordrejeton[i],jeton[3]);
        }
    }
}

int jeton_placement(int Nbrjoueur, char plateau[18][18],char ordrejeton[Nbrjoueur][30]) {
    if (Nbrjoueur == 2) {
        // Placements pour 2 joueurs
        plateau[1][9] = ordrejeton[0][0];  // Place le premier jeton
        plateau[17][9] = ordrejeton[1][0]; // Place le deuxième jeton
    } else {
        // Placements pour 4 joueurs
        plateau[1][9] = ordrejeton[0][0];  // Place le premier jeton
        plateau[17][9] = ordrejeton[1][0]; // Place le deuxième jeton
        plateau[9][1] = ordrejeton[2][0];  // Place le troisième jeton
        plateau[9][17] = ordrejeton[3][0]; // Place le quatrième jeton
    }

    return 0;  // Retourner 0 pour indiquer la fin de la fonction
}

int action_possible (int a) {
    if (a == 1) {
        do { Color(15,0);
            printf("\nActions possibles:");
            printf("\n1 - Deplacer un pion");
            printf("\n2 - Poser une barriere");
            printf("\nVeuillez choisir :(1 a 2)");
            scanf("%d", &a);
        }
        while (a < 1 || a > 2);
    }
    else{
        do { Color(15,0);
            printf("\nActions possibles:");
            printf("\n1 - Deplacer un pion");
            printf("\n2 - Poser une barriere");
            printf("\n3 - Passer son tour");
            printf("\n4 - Annuler la derniere action");
            printf("\nVeuillez choisir :(1 a 4)");
            scanf("%d", &a);
        }
        while (a < 1 || a > 4);
    }
}

int barriere(int i,char plateau[18][18],char barriere[][30]) {
    char x2,x1;
    int y1,y2,a,b,validation;
    do {
        do {
            printf("\nVeuillez donner barriere (A1 A2) :");
            scanf(" %c%d %c%d",&x1,&y1,&x2,&y2);
            y1= fct_ligne(y1);
            y2 = fct_ligne(y2);
            x1 = fct_colonne(x1);
            x2 = fct_colonne(x2);

            printf("%d %d %d %d",x1,y1,x2,y2);
            a = x1-x2;
            b = y1-y2;
            printf("\n Voici x1-x2=%d et y1-y2=%d",a,b);
        } while ( !((a==2 || a==-2)&& b==0) && !((b==2 || b==-2) && a==0) );
        int choixbarriere;
        if (a==0) {
            printf("Veuillez choisir:\n1 - Gauche\n2 - Droite\nLequel choissisez vous :");
            scanf("%d",&choixbarriere);
            if(choixbarriere==2) {
                if (plateau[y1][x1+1]=='X' || plateau[y1+1][x1+1]=='X' || plateau[y1+2][x1+1]=='X') {
                    printf("Il y a deja une barriere !!");
                }
                else if (x1+1 >=18) {
                    printf("Impossible, la barriere est en dehors du plateau ");
                }
                else {
                    for (int j=0;j<=2;j++ ) {
                        plateau[y1+j][x1+1]='X';
                        validation = 1;
                    }
                }
            }
            else {
                if (plateau[y1][x1-1]=='X' || plateau[y1+1][x1-1]=='X' || plateau[y1+2][x1-1]=='X') {
                    printf("Il y a deja une barriere !!");
                }
                else if (x1 - 1 <= 18) {
                    printf("Impossible, la barriere est en dehors du plateau !");
                }
                else {
                    for (int j=0;j<=2;j++ ) {
                        plateau[y1+j][x1-1]='X';
                        validation = 1;
                    }
                }
            }
        }

        else {
            printf("Veuillez choisir:\n1 - HAUT\n2 - BAS\nLequel choissisez vous :");
            scanf("%d",&choixbarriere);
            if(choixbarriere==2) {
                if (plateau[y1+1][x1]=='X' || plateau[y1+1][x1+1]=='X' || plateau[y1+1][x1+2]=='X') {
                    printf("Il y a deja une barriere !!");
                }
                else if (y1 + 1 >= 18) {
                    printf("Impossible, la barriere est en dehors du plateau !");
                }
                else {
                    for (int j=0;j<=2;j++ ) {
                        plateau[y1+1][x1+j]='X';
                        validation = 1;
                    }
                }
            }
            else {
                if (plateau[y1-1][x1]=='X' || plateau[y1-1][x1+1]=='X' || plateau[y1-1][x1+2]=='X') {
                    printf("Il y a deja une barriere !!");
                }
                else if (y1 - 1 <= 1) {
                    printf("Impossible, la barriere est en dehors du plateau !");
                }
                else {
                    for (int j=0;j<=2;j++ ) {
                        plateau[y1-1][x1+j]='X';
                        validation = 1;
                    }
                }
            }
        }

    } while (validation !=1);
    barriere[i][0] -=1 ;
}

int deplacer_pion(int i,char plateau[18][18], char ordrejeton[][30]) {
    int a,b,x1,y1,validation;

        for(int x=0;x<18;x++) {
            for(int j=0;j<18;j++) {
                if(plateau[x][j]==ordrejeton[i][0]) {
                    a = x;
                    b = j;
                    x1 = a;
                    y1 = b;
                }
            }
        }

        int choixpion,choixdirection;

do{
        do {
            printf("Voici les choix possible:\n1 - En bas\n 2 - En haut\n3 - A gauche\n4 - A droite") ;
            scanf("%d",&choixpion);
        }
        while(choixpion<1 || choixpion>4);

        plateau[a][b] = 0;
        switch (choixpion) {
            case 1:
                if (a + 2 < 18 && plateau[a+1][b] != 'X') {
                   if(plateau[a+2][b] ==0) {
                       a += 2;
                       plateau[a][b]= ordrejeton[i][0]; validation = 1;
                   }
                    else {
                        a += 4;
                        plateau[a][b]= ordrejeton[i][0]; validation = 1;
                    }
                }
            else {
                printf("Action impossible ! ");
            }
            break;
            case 2:
                if (a - 2 >= 1 && plateau[a-1][b] != 'X') {
                    if(plateau[a-2][b] ==0) {
                        a -= 2;
                        plateau[a][b]= ordrejeton[i][0]; validation = 1;
                    }
                    else {
                        a -= 4;
                        plateau[a][b]= ordrejeton[i][0]; validation = 1;
                    }
                }
            else {
                printf("Action impossible ! ");
            }
            break;
            case 3:
                if (b - 2 >= 1 && plateau[a][b -1] != 'X') {
                    if(plateau[a][b-2] ==0) {
                        b -= 2;
                        plateau[a][b]= ordrejeton[i][0]; validation = 1;
                    }
                    else {
                        b -= 4;
                        plateau[a][b]= ordrejeton[i][0]; validation = 1;
                    }
                }
            else {
                printf("Action impossible ! ");
            }
            break;
            case 4:
                if (b + 2 < 18 && plateau[a][b +1] != 'X') {
                    if(plateau[a][b+2] ==0) {
                        b += 2;
                        plateau[a][b]= ordrejeton[i][0]; validation = 1;
                    }
                    else {
                        b += 4;
                        plateau[a][b]= ordrejeton[i][0]; validation = 1;
                    }
                }
            else {
                printf("Actionn impossible ! ");
            }
        }

    } while(validation !=1);




}

void Color(int couleurDuTexte,int couleurDeFond) // fonction d'affichage de couleurs
{
    HANDLE H=GetStdHandle(STD_OUTPUT_HANDLE);
    SetConsoleTextAttribute(H,couleurDeFond*16+couleurDuTexte);
}

int main () {
 int choixmenu;
 do {
  choixmenu = menu();
  switch(choixmenu) {
   case 1:
    printf("\nVous venez de lancer une nouvelle partie ! \n");
   ////Nombre de joueurs////
   int Nbrjoueurs = joueurpartie();

   /////Nombre d'humains/////
   int Nbrhumain = joueurhumain(Nbrjoueurs);

   /////Noms des joueurs/////
   char nom[Nbrjoueurs][30];
   for (int i = 0; i < Nbrjoueurs; i++) {
    nomjoueur(nom[i],Nbrhumain,i+1);
   }

   ////jeton//////
   char jeton[Nbrjoueurs][30];

   for (int i = 0; i < Nbrjoueurs; i++) {
    jetonjoueur(jeton[i],Nbrhumain,i+1,nom[i]);
   }
   for (int i = 0; i < Nbrjoueurs; i++) {
    printf("%s\n",jeton[i]);
   }
   /////Plateau/////

   char plateau[18][18] = {
    {' ','A',' ','B',' ','C',' ','D',' ','E',' ','F',' ','G',' ','H',' ','I'},
    {'1',0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
    {' ',1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    {'2',0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
    {' ',1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    {'3',0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
    {' ',1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    {'4',0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
    {' ',1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    {'5',0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
    {' ',1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    {'6',0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
    {' ',1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    {'7',0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
    {' ',1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    {'8',0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
    {' ',1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    {'9',0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0},
    };
   int couleurcases = 15;

   affichageplateau(plateau,couleurcases,jeton,1,0,0,0,0);
   couleurcases = couleurplateau(plateau,couleurcases);
   printf("\nLa Partie peut enfin commencer!!\n");

   ////////PARTIE////////

   char ordrejoueur[Nbrjoueurs][30];
   char ordrejeton[Nbrjoueurs][30];
   int stockbarriere[Nbrjoueurs][0];
   if (Nbrjoueurs ==2) {
    stockbarriere[0][0] = 10;
    stockbarriere[1][0] = 10;
   }
   else {
    stockbarriere[0][0] = 5;
    stockbarriere[1][0] = 5;
    stockbarriere[2][0] = 5;
    stockbarriere[3][0] = 5;
   }

   hasard(Nbrjoueurs,nom,ordrejoueur,jeton,ordrejeton);
   jeton_placement(Nbrjoueurs,plateau,ordrejeton);
    for (int i = 0; i < Nbrjoueurs; i++) {
     printf("C'est au tour de %s de jouer et son pion %s ! \n",ordrejoueur[i],ordrejeton[i]);
     affichageplateau(plateau,couleurcases,ordrejeton,2,i,ordrejoueur,Nbrjoueurs,stockbarriere);
     int choix =action_possible(1);
     switch (choix) {
      case 1: deplacer_pion(i,plateau,ordrejeton); break;
      case 2: barriere(i,plateau,stockbarriere);break;
      default : return 0;
     }
    }
    do { for (int i = 0; i < Nbrjoueurs; i++) {
     printf("C'est au tour de %s de jouer et son pion %s ! \n",ordrejoueur[i],ordrejeton[i]);
     affichageplateau(plateau,couleurcases,ordrejeton,2,i,ordrejoueur,Nbrjoueurs,stockbarriere);
     int choix =action_possible(2);
     switch (choix) {
      case 1: deplacer_pion(i,plateau,ordrejeton); break;
      case 2: barriere(i,plateau,stockbarriere);break;
      case 3 : break;
      case 4 : break;
     }

    }
    }while(1);
   }
  }while(1);
 }

